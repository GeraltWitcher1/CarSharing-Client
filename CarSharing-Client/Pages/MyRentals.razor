@page "/view-rentals"
@using CarSharing_Client.Data
@using CarSharing_Client.Models
@using CarSharing_Client.Authentication
@inject ILeaseService _leaseService

@inject IListingService _listingService

@inject AuthenticationStateProvider _authenticationStateProvider


<h3>MyRentals</h3>


<div class="row p-1">
    @if (_leases != null)
    {
        foreach (var lease in _leases)
        {
            <div class="col-lg-4 col-md-6 col-sm-12 mb-3" style="opacity: @(lease.Canceled ? 0.6 : 1)">
                <div class="card text-center">
                    <div class="member-card">
                        <div class="card-header p-3">
                            <div class="d-flex justify-content-around mt-2">
                                <span class="iconify" data-icon="iconoir:profile-circled" data-width="60" data-height="60"></span>
                                <div class="d-flex flex-column">
                                    <h4>@lease.Listing.Vehicle.Owner.FirstName @lease.Listing.Vehicle.Owner.LastName </h4>
                                    <p>PhoneNo: @lease.Listing.Vehicle.Owner.PhoneNo</p>
                                </div>
                            </div>
                        </div>

                        <div class="card-body">
                            @if (lease.Canceled)
                            {
                                <strong>
                                    <span class="oi oi-circle-x" data-width="30" data-height="30"></span>
                                    <em>Lease has been canceled</em>
                                </strong>
                            }
                            else
                            {
                                <strong>
                                    <span class="oi oi-circle-check" data-width="30" data-height="30"></span>
                                    <em>Lease confirmed</em>
                                </strong>
                            }

                            <hr/>
                            <div class="card-text">
                                <p>
                                     @lease.LeasedFrom.ToString(DateTimeFormat) -> @lease.LeasedTo.ToString(DateTimeFormat)
                                </p>
                            </div>

                            <div class="card-text">
                                <span class="font-weight-light">Price: </span>
                                <p>
                                    @lease.Listing.Price dkk x @((lease.LeasedTo - lease.LeasedFrom).Days) days =
                                    <strong> @((lease.LeasedTo - lease.LeasedFrom).Days * lease.Listing.Price) dkk </strong>
                                </p>
                            </div>
                            

                            @if (!lease.Canceled)
                            {
                                <Button @onclick="@(async () => await _leaseService.CancelLeaseAsync(lease.Id))" class="btn btn-dark">Cancel </Button>
                            }
                        </div>

                        <div class="card-footer p-3">
                            <span class="iconify " data-icon="fluent:vehicle-car-profile-ltr-16-filled" data-width="30" data-height="30"></span>
                            <h4>@lease.Listing.Vehicle.Brand @lease.Listing.Vehicle.Model </h4>
                            <p>
                                <strong>Licence number: @lease.Listing.Vehicle.LicenseNo</strong>
                            </p>
                        </div>

                    </div>
                </div>
            </div>
        }
    }
</div>


@code {
    private const string DateTimeFormat = "dd/MM/yyyy HH':'mm':'ss";
    
    private IList<Lease> _leases;
    private Customer _customer;

    protected override async Task OnInitializedAsync()
    {
        _customer = ((CustomAuthenticationStateProvider) _authenticationStateProvider).CachedCustomer;


        _leases = await _leaseService.GetLeasesByCustomerCpr(_customer.Cpr);
    }

}